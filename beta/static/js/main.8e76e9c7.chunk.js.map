{"version":3,"sources":["assets/svg/map.svg","test/worker-builder.js","App.tsx","test/fibo.worker.js","reportWebVitals.ts","index.tsx"],"names":["WorkerBuilder","worker","code","toString","blob","Blob","Worker","URL","createObjectURL","instance","self","onmessage","message","nbr","data","n1","n2","somme","i","postMessage","App","React","iframe","setIframe","iframeContent","setIframeContent","iframeDOM","setIframeDOM","document","getElementById","console","log","contentWindow","addEventListener","contentDocument","ordersForm","orders","getElementsByClassName","order","item","orderSelection","getElementsByTagName","moveOption","value","dispatchEvent","Event","bubbles","className","id","style","height","width","title","src","type","onClick","alt","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+MAAe,G,MAAA,IAA0B,iC,sCCApBA,E,4CACnB,WAAYC,GAAQ,oBAClB,IAAMC,EAAOD,EAAOE,WACdC,EAAO,IAAIC,KAAK,CAAC,IAAD,OAAKH,EAAL,SAEtB,OAAO,YAJW,UAIX,IAAII,OAAOC,IAAIC,gBAAgBJ,K,sBALCE,S,OCOrCG,EAAW,IAAIT,GCNN,WAEbU,KAAKC,UAAY,SAACC,GAOhB,IANA,IAAMC,EAAMD,EAAQE,KAChBC,EAAK,EACLC,EAAK,EACLC,EAAQ,EAGHC,EAAI,EAAGA,GAAKL,EAAKK,IACxBD,EAAQF,EAAKC,EAEbD,EAAKC,EAELA,EAAKC,EAKPE,YAFeN,EAAMG,EAAKD,OD2IfK,EA1EO,WAOpB,MAA4BC,WAAe,MAA3C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0CF,WAAe,MAAzD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAkCJ,WAAe,MAAjD,mBAAOK,EAAP,KAAkBC,EAAlB,KAgDA,OA9CAN,aAAgB,WACdE,EAAUK,SAASC,eAAe,cAClCC,QAAQC,IAAI,CAAET,WACVA,IACFG,EAAiBH,EAAOU,eACxBV,EAAOW,iBAAiB,QAAQ,WAC9BH,QAAQC,IAAI,yBACZJ,EAAaL,EAAOY,iBAAmBZ,EAAOU,cAAcJ,gBAG/D,CAACN,IAEJD,aAAgB,WACd,GAAIK,EAAW,CACb,IAAMS,EAAaT,EAAUG,eAAe,oBACxCO,EAASD,EAAWE,uBAAuB,SAEzCC,EAAQF,EAAOG,KADN,GAETC,EAAiBF,EAAMG,qBAAqB,UAAUF,KAAK,GAC3DG,EAAaF,EAAeD,KAAK,GACvCT,QAAQC,IAAI,CAAES,mBACdV,QAAQC,IAAI,CACVI,aACAC,SACAE,QACAI,eAEFF,EAAeG,MAAQ,OACvBH,EAAeI,cAAc,IAAIC,MAAM,SAAU,CAAEC,SAAS,KAO5DV,EAASD,EAAWE,uBAAuB,SAC3CP,QAAQC,IAAI,CAAEI,aAAYC,SAAQE,aAEnC,CAACZ,IAEJI,QAAQC,IAAI,CAAET,SAAQE,gBAAeE,cACrCjB,EAASE,UAAY,SAACC,GAChBA,GACFkB,QAAQC,IAAI,sBAAuBnB,EAAQE,OAI7C,sBAAKiC,UAAU,MAAf,UACE,qBAAKC,GAAG,YACR,wBACEC,MAAO,CAAEC,OAAQ,QAASC,MAAO,SACjCH,GAAG,YACHI,MAAM,YACNC,IAAI,yCAEN,wBAAQC,KAAK,SAASC,QAAS,kBAAM9C,EAASU,YAAY,IAA1D,0BAGA,qBAAKqC,IAAI,WAAWH,IAAKI,QE1IhBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzC,SAASC,eAAe,SAM1B6B,M","file":"static/js/main.8e76e9c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/map.7d5d0e83.svg\";","export default class WorkerBuilder extends Worker {\n  constructor(worker) {\n    const code = worker.toString();\n    const blob = new Blob([`(${code})()`]);\n    // eslint-disable-next-line no-constructor-return\n    return new Worker(URL.createObjectURL(blob));\n  }\n}\n","import * as React from \"react\";\nimport \"./assets/css/App.css\";\nimport map from \"./assets/svg/map.svg\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport WorkerBuilder from \"./test/worker-builder\";\nimport FiboWorker from \"./test/fibo.worker\";\n\nconst instance = new WorkerBuilder(FiboWorker);\n\n// const fetchHTML = async (gameID) => {\n//   const url = `http://localhost/board.php?gameID=${gameID}`;\n//   let html = \"\";\n//   await fetch(url)\n//     .then((r) => {\n//       return r.text();\n//     })\n//     .then((h) => {\n//       html = h;\n//     });\n\n//   console.log({ html });\n//   const parser = new DOMParser();\n//   const virtualDoc = parser.parseFromString(html, \"text/html\");\n//   console.log({ virtualDoc });\n//   const test = document.getElementById(\"test123\");\n//   // get a list of all <script> tags in the new page\n//   const tmpScripts: HTMLScriptElement[] = Array.from(\n//     virtualDoc.getElementsByTagName(\"script\"),\n//   );\n//   console.log({ tmpScripts });\n//   const scripts: HTMLScriptElement[] = [];\n//   if (tmpScripts.length > 0) {\n//     // push all of the document's script tags into an array\n//     // (to prevent dom manipulation while iterating over dom nodes)\n//     tmpScripts.forEach((el: HTMLScriptElement) => {\n//       const s = document.createElement(\"script\");\n//       let src;\n//       if (el.src) {\n//         if (!el.src.includes(\"http://localhost\") && !el.src.includes(\"/beta\")) {\n//           src = `http://localhost${el.src}`;\n//         } else {\n//           src = el.src.replace(\"/beta\", \"\");\n//         }\n//         s.src = src;\n//       } else {\n//         // eslint-disable-next-line no-eval\n//         s.innerHTML = el.innerHTML;\n//       }\n//       console.log({ s });\n//       scripts.push(s);\n//     });\n\n//     const SCRIPT_REGEX = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi;\n//     let text = html;\n//     while (SCRIPT_REGEX.test(text)) {\n//       text = text.replace(SCRIPT_REGEX, \"\");\n//     }\n//     console.log({ text });\n//     const virtualDoc2 = parser.parseFromString(html, \"text/html\");\n//     console.log({ virtualDoc2 });\n//     test.innerHTML = virtualDoc2.getElementsByTagName(\"html\")[0].innerHTML;\n//     scripts.forEach((el: HTMLScriptElement) => {\n//       test.appendChild(el);\n//     });\n//   }\n\n//   console.log({ virtualDoc, scripts });\n//   const el = virtualDoc.getElementById(\"blsbkdnfdkfksfmdkn\");\n//   console.log({ el });\n// };\n\nconst simulateClick = (elem) => {\n  // Create our event (with options)\n  const evt = new MouseEvent(\"click\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  // If cancelled, don't dispatch our event\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const canceled = !elem.dispatchEvent(evt);\n};\n\nconst App: React.FC = function (): React.ReactElement {\n  // React.useEffect(() => {\n  //   const params = window.location.search.substring(1);\n  //   const gameID = params.split(`=`)[1];\n  //   console.log(gameID);\n  //   fetchHTML(gameID);\n  // }, []);\n  const [iframe, setIframe] = React.useState(null);\n  const [iframeContent, setIframeContent] = React.useState(null);\n  const [iframeDOM, setIframeDOM] = React.useState(null);\n\n  React.useEffect(() => {\n    setIframe(document.getElementById(\"testFrame\") as HTMLIFrameElement);\n    console.log({ iframe });\n    if (iframe) {\n      setIframeContent(iframe.contentWindow);\n      iframe.addEventListener(\"load\", () => {\n        console.log(\"iframe content loaded\");\n        setIframeDOM(iframe.contentDocument || iframe.contentWindow.document);\n      });\n    }\n  }, [iframe]);\n\n  React.useEffect(() => {\n    if (iframeDOM) {\n      const ordersForm = iframeDOM.getElementById(\"orderFormElement\");\n      let orders = ordersForm.getElementsByClassName(\"order\");\n      const sOrder = 0;\n      const order = orders.item(sOrder);\n      const orderSelection = order.getElementsByTagName(\"select\").item(0);\n      const moveOption = orderSelection.item(1);\n      console.log({ orderSelection });\n      console.log({\n        ordersForm,\n        orders,\n        order,\n        moveOption,\n      });\n      orderSelection.value = \"Move\";\n      orderSelection.dispatchEvent(new Event(\"change\", { bubbles: true }));\n      // simulateClick(moveOption);\n      // if (moveOption.onclick) {\n      //   moveOption.onclick();\n      // } else if (moveOption.click) {\n      //   moveOption.click();\n      // }\n      orders = ordersForm.getElementsByClassName(\"order\");\n      console.log({ ordersForm, orders, order });\n    }\n  }, [iframeDOM]);\n\n  console.log({ iframe, iframeContent, iframeDOM });\n  instance.onmessage = (message) => {\n    if (message) {\n      console.log(\"Message from worker\", message.data);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <div id=\"test123\" />\n      <iframe\n        style={{ height: \"500px\", width: \"500px\" }}\n        id=\"testFrame\"\n        title=\"gameBoard\"\n        src=\"http://localhost/board.php?gameID=12\"\n      />\n      <button type=\"button\" onClick={() => instance.postMessage(5)}>\n        Send Message\n      </button>\n      <img alt=\"Game Map\" src={map} />\n    </div>\n  );\n};\n\nexport default App;\n","// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n  // eslint-disable-next-line no-restricted-globals\n  self.onmessage = (message) => {\n    const nbr = message.data;\n    let n1 = 0;\n    let n2 = 1;\n    let somme = 0;\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 2; i <= nbr; i++) {\n      somme = n1 + n2;\n\n      n1 = n2;\n\n      n2 = somme;\n    }\n\n    const result = nbr ? n2 : n1;\n\n    postMessage(result);\n  };\n};\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/css/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}